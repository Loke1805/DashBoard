import dash
from dash import dcc, html, Input, Output
import pandas as pd
import plotly.express as px

# Load sample data
# Replace with your dataset, e.g., pd.read_csv('your_file.csv')
df = px.data.gapminder()

# Initialize the Dash app
app = dash.Dash(__name__)

# App layout
app.layout = html.Div([
    html.H1("Visual Data Analytics Dashboard", style={'textAlign': 'center'}),
    
    # Dropdown for selecting a country
    html.Div([
        html.Label("Select Country:"),
        dcc.Dropdown(
            id='country-dropdown',
            options=[{'label': country, 'value': country} for country in df['country'].unique()],
            value='India',  # Default value
            multi=False
        ),
    ], style={'width': '50%', 'margin': '0 auto'}),
    
    # Dropdown for selecting a metric
    html.Div([
        html.Label("Select Metric:"),
        dcc.Dropdown(
            id='metric-dropdown',
            options=[
                {'label': 'GDP per Capita', 'value': 'gdpPercap'},
                {'label': 'Life Expectancy', 'value': 'lifeExp'},
                {'label': 'Population', 'value': 'pop'}
            ],
            value='gdpPercap',  # Default value
            multi=False
        ),
    ], style={'width': '50%', 'margin': '20px auto'}),
    
    # Line chart
    dcc.Graph(id='line-chart'),

    # Scatter plot
    dcc.Graph(id='scatter-plot'),
])

# Callback to update the line chart
@app.callback(
    Output('line-chart', 'figure'),
    [Input('country-dropdown', 'value'),
     Input('metric-dropdown', 'value')]
)
def update_line_chart(selected_country, selected_metric):
    filtered_df = df[df['country'] == selected_country]
    fig = px.line(
        filtered_df,
        x='year',
        y=selected_metric,
        title=f'{selected_metric} Trend for {selected_country}',
        labels={'year': 'Year', selected_metric: selected_metric}
    )
    return fig

# Callback to update the scatter plot
@app.callback(
    Output('scatter-plot', 'figure'),
    [Input('country-dropdown', 'value')]
)
def update_scatter_plot(selected_country):
    filtered_df = df[df['country'] == selected_country]
    fig = px.scatter(
        filtered_df,
        x='gdpPercap',
        y='lifeExp',
        size='pop',
        color='continent',
        hover_name='country',
        title=f'GDP vs Life Expectancy for {selected_country}',
        labels={'gdpPercap': 'GDP per Capita', 'lifeExp': 'Life Expectancy'}
    )
    return fig

# Run the app
if __name__ == '__main__':
    app.run_server(debug=True)
